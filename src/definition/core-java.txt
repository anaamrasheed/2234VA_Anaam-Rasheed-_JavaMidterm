***ANSWER ALL QUESTIONS BELOW***

What is a programming language?
Answer: A set of vocabulary and grammatical rules for instructing a computer or computing device to perform specific tasks.

What is a JDK composed of? Define each components?
Answer: It is composed of:
-The Java Runtime Environment (JRE): provides minimum requirements for executing a Java application.
                                     Consists of the JVM(Java virtual machine),core classes, and supporting files.

-an interpreter/loader (Java):a stand-alone version of the Java interpreter built into the HotJava browser.
The runtime interpreter provides the support to run Java executable programs in compiled, bytecode format.

- a compiler (javac): used to compile Java source code files into executable Java bytecode classes. In Java, source code files have
 the extension .java. The Java compiler takes files with this extension and generates executable class files with the .class extension.

-an archiver (jar):
-a documentation generator (Javadoc):
-

What is an IDE?
Answer: Integrated Development Environment, enables programmers to consolidate the different aspects of writing a computer program.
       IDEs increase programmer productivity by combining common activities of writing software into a single application:
       editing source code, building executables, and debugging.

What are some of the most popular Java IDEs available in the market?
Answer: IntelliJ, Eclipse, BlueJ, JCreator

Explain the entire java life cycle.
Answer: Create a source code document, and run it through a source code compiler. Compiler creates a new document in Bytecode.
        The JVM reads and runs the bytecode.

What is a class?
Answer:A class is a blueprint from which an object is created.

What is an object?
Answer: An instance of a class. All objects have states (instance variables-things it knows about itself) and
behaviors(methods-things an object can do)

What is the entry point of an application?
Answer: the main method

Why is the main() static?
       Answer: It is part of its class. So it does not need an object to be called. Non-static methods or variables, you must create an object of that class
       in order to call them.

Which class is the superclass of all classes?
Answer: the Object class

What is difference between path and classpath variables?
Answer:

What is the difference between an Interface and Abstract class?
Answer:

Can you make an Object from an Interface and Abstract class? If yes or no, how would you do it?
Answer: No, interfaces and abstract classes cannot be instantiated (cannot create objects of interfaces or abstract classes)

What is Access Modifier?
Answer:

What is OOP? Define each OOP concept.
Answer:Object-oriented Programming:

-Abstraction:hiding complex/sensitive functionality from end-user by hiding methods/variables and wrapping them in overriden
              functionality.
-Encapsulation: process of binding data (variables) and code acting on the data (methods) together as a single unit..(data hiding)
                When we don't want to allow the user/other people to change the states/variables of a class.

-Inheritance: one object acquires all the properties and behaviors of a parent object. The idea behind inheritance in Java is
that you can create new classes that are built upon existing classes. When you inherit from an existing class,
you can reuse methods and fields of the parent class.

-Polymorphism: ability to have multiple methods/functionality with the same name & same/similar functionality,
                      but acting on different numbers/types of objects/variables

                      2 Types of Polymorphism
                          1 - Method Overloading (Compile-Time Polymorphism)
                          2 - Method Overriding (Run-Time Polymorphism)

What is Java Package and which package is imported by default?
Answer:

What is an API? List some API's that you have used so far.
Answer:

Does java support multiple inheritance? Why or why not?
Answer:

What is method overloading and when does it happen?
Answer:

Explain exceptions in java and how to handle them.
Answer:

What is static keyword? When and how do we use it?
Answer:

What is final keyword? When and how do we use it?
Answer:

Explain the difference between final, finally and finalize?
Answer:

What is a constructor?
Answer:

Can we have multiple constructors in a class?
Answer: Yes

If we don't have a constructor declared, what is called during the object creation?
Answer:

What is "this" keyword in Java? When would we use it?
Answer:

What is "super" keyword in Java? What are some scenarios we would use it?
Answer:

What does JVM stand for?
Answer: Java Virtual Machine

Is JVM platform independent?
Answer:

What version of Java are you using?
Answer:

What does JAR stand for?
Answer: Java Archive

What is the difference between JDK and JVM?
Answer:

What is the difference between JVM and JRE?
Answer:

Explain the difference between compile-time and run-time?
Answer:

What is heap?
Answer:

How does Java manage its memory?
Answer:

What is the difference between String, StringBuffer and StringBuilder?
Answer:

What is Singleton class?
Answer:

What is Serialization and Deserialization?
Answer:

Explain the difference between While and Do..While loops?
Answer:

What is Enum?
Answer:

What is Iterator?
Answer:

Which one will take more memory: an int or Integer? Why?
Answer:

Why are Strings considered to be immutable in Java?
Answer:

What is constructor chaining in Java?
Answer:

The difference between Serial and Parallel Garbage Collector?
Answer:

What does JIT stands for?
Answer:

Explain the process of Java garbage collection?
Answer:

Can you guarantee the garbage collection process?
Answer:

What is the difference between stack and heap in Java?
Answer:

What is reflection in Java and why is it useful?
Answer:

What is multithreading in Java?
Answer:

What is synchronization in Java?
Answer:

What is a Framework?
Answer:

What are the testing Frameworks available in Java?
Answer:

What are jUnit and testNG?
Answer:

What are the dependencies for this project?
Answer:

What is dependency injection in Java?
Answer:

Explain what static binding and dynamic binding is?
Answer: